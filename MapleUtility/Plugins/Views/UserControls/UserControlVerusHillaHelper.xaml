<UserControl x:Class="MapleUtility.Plugins.Views.UserControls.UserControlVerusHillaHelper"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MapleUtility.Plugins.Views.UserControls"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
             xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
             mc:Ignorable="d" Background="#211d1e">
    
    <UserControl.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockType}">
            <Setter Property="Foreground" Value="#f86475"/>
        </Style>
        <Style x:Key="RadButtonHillaStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
            <Setter Property="BorderBrush" Value="#aad900"/>
            <Setter Property="mat:MaterialAssist.FocusBrush" Value="Transparent"/>
            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="#211518"/>
            <Setter Property="mat:MaterialAssist.PressedBrush" Value="#212121"/>
            <Setter Property="FontFamily" Value="{telerik1:FluentResource ResourceKey=FontFamily}"/>
            <Setter Property="FontSize" Value="{telerik1:FluentResource ResourceKey=FontSize}"/>
            <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerBrush}"/>
            <Setter Property="Background" Value="{telerik1:FluentResource ResourceKey=MainBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="CornerRadius" Value="{telerik1:FluentResource ResourceKey=CornerRadius}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="telerik1:RadButton">
                        <Grid>
                            <Border x:Name="BorderVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                            <Border x:Name="FocusVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="{telerik1:FluentResource ResourceKey=FocusThickness}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                            <mat:FluentControl
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch">
                                <ContentPresenter x:Name="Content"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    Focusable="False"
                                    TextBlock.Foreground="{TemplateBinding Foreground}"
                                    Margin="{TemplateBinding Padding}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </mat:FluentControl>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <!-- background is hidden -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsBackgroundVisible" Value="False"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </MultiTrigger>

                            <!-- General IsFocused setters -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                            </MultiTrigger>

                            <!-- general setters for IsMouseOver -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                            </Trigger>

                            <!-- general setters for IsPressed -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                            </Trigger>

                            <!-- disabled -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Content" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}"/>
                                <Setter Property="Background" Value="#352f30"/>
                            </Trigger>

                            <!-- disabled and focused -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                            </MultiTrigger>

                            <!-- disabled & background is hidden -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition Property="IsBackgroundVisible" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonHillaStyle}"/>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Background="White">
            <telerik:RadToggleSwitchButton VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5, 14, 0, 0" IsChecked="{Binding IsHelperON}" ContentPosition="Both" CheckedContent="Helper ON" UncheckedContent="Helper OFF" TrackWidth="40" BorderBrush="#aad900"/>
        </Grid>

        <Grid Grid.Row="1" Background="#aa000000" Panel.ZIndex="1">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsHelperON}" Value="False">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            
            <TextBlock FontSize="36" Text="Helper OFF" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Grid>

        <Grid Width="1000" Height="420" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="180"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" BorderBrush="#aad900" BorderThickness="1">
                <Grid Margin="149, 20">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LatestPatternTime}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"/>
                            <RowDefinition Height="4*"/>
                            <RowDefinition Height="4*"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" FontSize="30" Text="{Binding CurrentPhase, StringFormat={}현재 패턴 페이즈 : {0} 페이즈}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <Separator Grid.Column="1" Background="#aad900" Width="1" Height="40" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="2" FontSize="30" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}마지막 패턴 시간 {0:00}:{1:00}">
                                        <Binding Path="LatestPatternTime.Minutes" />
                                        <Binding Path="LatestPatternTime.Seconds" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>


                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" FontSize="42" Text="다음 패턴 예정 시간" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="1" FontSize="42" VerticalAlignment="Center" HorizontalAlignment="Right">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0:00}:{1:00}">
                                        <Binding Path="NextPatternTime.Minutes" />
                                        <Binding Path="NextPatternTime.Seconds" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>

                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" FontSize="42" Text="다음 패턴까지 남은 시간" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="1" FontSize="42" Text="{Binding RemainTimeSeconds, StringFormat={}{0}초}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Grid>
                    </Grid>

                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LatestPatternTime}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" FontSize="36" Text="첫번째 낫 패턴 (27:14) 때" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                        <TextBlock Grid.Row="1" FontSize="36" Text="패턴 시간 체크를 눌러주세요." VerticalAlignment="Top" HorizontalAlignment="Center"/>
                    </Grid>
                </Grid>
            </Border>

            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0, 10, 0, 0">
                <telerik:RadButton Width="70" Content="초기화" Command="{Binding ResetCommand}" Foreground="#f86475" Margin="0, 0, 5, 0" Padding="10, 7, 10, 2" VerticalContentAlignment="Center"/>
                <telerik:RadButton Width="70" Content="UI Bar" Command="{Binding OpenHillaUIBarCommand}" Foreground="#f86475" Padding="10, 7, 10, 2" VerticalContentAlignment="Center"/>
            </StackPanel>

            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="이전 페이즈" HorizontalAlignment="Center" Margin="0, 0, 0, 5"/>
                    <telerik:RadButton Width="100" Height="100" Grid.Column="0" Command="{Binding BackKeyCommand}">
                        <Image Source="/MapleUtility;component/Plugins/Images/Back.png" Margin="20"/>

                        <telerik:RadButton.Style>
                            <Style TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource RadButtonHillaStyle}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentPhase}" Value="1">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LatestPatternTime}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </telerik:RadButton.Style>
                    </telerik:RadButton>
                    <telerik:RadButton Width="100" Height="30" Margin="0, 5, 0, 0" Foreground="#f86475" Content="{Binding BackKeyString}" Command="{Binding BackKeySettingCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="100, 10, 100, 0">
                    <TextBlock Text="패턴 시간 체크" HorizontalAlignment="Center" Margin="0, 0, 0, 5"/>
                    <telerik:RadButton Width="100" Height="100" Grid.Column="0" Command="{Binding ScytheKeyCommand}">
                        <Image Source="/MapleUtility;component/Plugins/Images/Scythe.png" Margin="20"/>
                    </telerik:RadButton>
                    <telerik:RadButton Width="100" Height="30" Margin="0, 5, 0, 0" Foreground="#f86475" Content="{Binding ScytheKeyString}" Command="{Binding ScytheKeySettingCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                </StackPanel>

                <StackPanel Orientation="Vertical">
                    <TextBlock Text="다음 페이즈" HorizontalAlignment="Center" Margin="0, 0, 0, 5"/>
                    <telerik:RadButton Width="100" Height="100" Grid.Column="0" Command="{Binding NextKeyCommand}">
                        <Image Source="/MapleUtility;component/Plugins/Images/Next.png" Margin="20"/>

                        <telerik:RadButton.Style>
                            <Style TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource RadButtonHillaStyle}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentPhase}" Value="3">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LatestPatternTime}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </telerik:RadButton.Style>
                    </telerik:RadButton>
                    <telerik:RadButton Width="100" Height="30" Margin="0, 5, 0, 0" Foreground="#f86475" Content="{Binding NextKeyString}" Command="{Binding NextKeySettingCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>

    