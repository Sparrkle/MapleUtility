<uc:UCUniqueWindow x:Class="MapleUtility.Plugins.Views.Windows.Timer.WindowTimerUIBar"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:uc="clr-namespace:MapleUtility.Plugins.UserControls"
        xmlns:local="clr-namespace:MapleUtility.Plugins.Views.Windows.Timer"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:helpers="clr-namespace:Telerik.Windows.Controls.Theming.Helpers;assembly=Telerik.Windows.Controls"
        mc:Ignorable="d"
        ResizeMode="CanResizeWithGrip"
        WindowStyle="None" 
        Topmost="True" 
        Deactivated="Window_Deactivated"
        AllowsTransparency="True" 
        Background="{Binding UIBarBackground, Converter={StaticResource ColorToHSColorBrushConverter}}"
        Title="Timer UI Bar" MinWidth="{Binding UIBarMinWidthSize}" MinHeight="{Binding UIBarMinHeightSize}" MaxHeight="{Binding UIBarMaxHeightSize}" MaxWidth="{Binding UIBarMaxWidthSize}"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        Top="{Binding UIBarTop, Mode=TwoWay}"  Left="{Binding UIBarLeft, Mode=TwoWay}"
        Width="{Binding UIBarWidthSize, Mode=TwoWay}" Height="{Binding UIBarHeightSize, Mode=TwoWay}">

    <uc:UCUniqueWindow.Resources>
        <CollectionViewSource x:Key="cvsOrderedRunningTimerList" Source="{Binding RunningTimerList}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="RemainTime" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="cvsOrderedPriorityTimerList" Source="{Binding PresetTimerList}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Priority" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </uc:UCUniqueWindow.Resources>

    <Border Background="Transparent" MouseDown="Border_MouseDown">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Button Grid.Row="0" Command="{Binding CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uc:UCUniqueWindow}}}" HorizontalAlignment="Right" VerticalAlignment="Center" Content="✖" FontSize="8" Padding="0" Margin="0, 0, 0, 0" Background="Transparent" helpers:ThemeHelper.PressedBackgroundBrush="Transparent" helpers:ThemeHelper.PressedBrush="Transparent" helpers:ThemeHelper.MouseOverBackgroundBrush="Transparent" helpers:ThemeHelper.MouseOverBrush="Transparent" BorderBrush="Transparent"/>

            <Grid Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#33000000" Panel.ZIndex="10">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTimerPaused}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsTimerON}" Value="False">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsTimerLocked}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="24" FontWeight="Bold" Foreground="#44ffffff">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockType}">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        ShadowDepth="5"
                                        Direction="330"
                                        Color="Black"
                                        Opacity="0.5"
                                        BlurRadius="5"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsTimerPaused}" Value="True">
                                    <Setter Property="Text" Value="PAUSE"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsTimerON}" Value="False">
                                    <Setter Property="Text" Value="TIMER OFF"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsTimerLocked}" Value="True">
                                    <Setter Property="Text" Value="LOCKED"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

            <telerik:RadListBox Grid.Row="1" BorderThickness="0" Background="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VirtualizingPanel.IsVirtualizing="True">
                <telerik:RadListBox.Style>
                    <Style TargetType="{x:Type telerik:RadListBox}" BasedOn="{StaticResource RadListBoxStyle}">
                        <Setter Property="ItemsSource" Value="{Binding Source={StaticResource cvsOrderedRunningTimerList}}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedUIBarStyle}" Value="고정형">
                                <Setter Property="ItemsSource" Value="{Binding Source={StaticResource cvsOrderedPriorityTimerList}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </telerik:RadListBox.Style>
                <telerik:RadListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type telerik:RadListBoxItem}" BasedOn="{StaticResource BaseRadListBoxItemStyle}">
                        <Setter Property="Padding" Value="0 0 2 2"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </telerik:RadListBox.ItemContainerStyle>
                <telerik:RadListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel CanVerticallyScroll="False" CanHorizontallyScroll="False">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Orientation" Value="Horizontal"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UIBarVertical}" Value="True">
                                            <Setter Property="Orientation" Value="Vertical"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </ItemsPanelTemplate>
                </telerik:RadListBox.ItemsPanel>
                
                <telerik:RadListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.UIBarTimerSize}" Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.UIBarTimerSize}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black">
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowTimerUIBar}}, Path=DataContext.SelectedUIBarStyle}" Value="고정형"/>
                                                    <Condition Binding="{Binding RemainTimeSeconds}" Value=""/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid Panel.ZIndex="1">
                                    <telerik:Arc
                                        Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowTimerUIBar}}, Path=DataContext.RemainSquareColor, Converter={StaticResource ColorToHSColorBrushConverter}}"
                                        ArcThickness="255"
                                        Diameter="200"
                                        StartAngle="0"
                                        EndAngle="{Binding RemainRadius}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                        <telerik:Arc.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform CenterX="100" CenterY="100" Angle="270" />
                                                <ScaleTransform ScaleX="-1" ScaleY="1" CenterX="100" CenterY="100"/>
                                            </TransformGroup>
                                        </telerik:Arc.RenderTransform>
                                    </telerik:Arc>
                                </Grid>

                                <Grid Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowTimerUIBar}}, Path=DataContext.RemainBackColor, Converter={StaticResource ColorToHSColorBrushConverter}}" Panel.ZIndex="0"/>
                            </Grid>
                            <Image Source="{Binding ImageItem.DisplayedImage}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="UniformToFill" Panel.ZIndex="-2"/>

                            <StackPanel Panel.ZIndex="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <StackPanel.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockType}">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect
                                                    ShadowDepth="5"
                                                    Direction="330"
                                                    Color="Black"
                                                    Opacity="0.5"
                                                    BlurRadius="5"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </StackPanel.Resources>
                                <uc:UCOutlineTextBlock Text="{Binding RemainTimeSeconds}" HorizontalAlignment="Center" Stroke="#bb000000" StrokePosition="Outside" StrokeThickness="2" Fill="White" FontWeight="DemiBold">
                                    <uc:UCOutlineTextBlock.Style>
                                        <Style TargetType="{x:Type uc:UCOutlineTextBlock}" BasedOn="{StaticResource BaseOutlineTextBlockStyle}">
                                            <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowTimerUIBar}}, Path=DataContext.SelectedUIBarFont}" />
                                            <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowTimerUIBar}}, Path=DataContext.UIBarFontSize}" />
                                        </Style>
                                    </uc:UCOutlineTextBlock.Style>
                                </uc:UCOutlineTextBlock>
                                <uc:UCOutlineTextBlock Text="{Binding Name}" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowTimerUIBar}}, Path=DataContext.IsShowUIBarTimerName, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Center" Stroke="#bb000000" StrokePosition="Outside" StrokeThickness="2" Fill="White" FontWeight="DemiBold" FontFamily="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowTimerUIBar}}, Path=DataContext.SelectedUIBarFont}" FontSize="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:WindowTimerUIBar}}, Path=DataContext.UIBarNameFontSize}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </telerik:RadListBox.ItemTemplate>
            </telerik:RadListBox>
        </Grid>
    </Border>
</uc:UCUniqueWindow>
